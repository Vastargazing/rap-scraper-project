"""
üéº Pydantic –º–æ–¥–µ–ª–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–µ—Å–µ–Ω –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö

–ù–ê–ó–ù–ê–ß–ï–ù–ò–ï:
- –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Å–µ–Ω, –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞, –º–µ—Ç—Ä–∏–∫ –∫–∞—á–µ—Å—Ç–≤–∞
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞—Ö, —Å–∫—Ä–∞–ø–µ—Ä–µ, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è—Ö —Å LangChain, Gemini, Spotify API

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
from src.models.models import SongMetadata, LyricsAnalysis, QualityMetrics, EnhancedSongData

–ó–ê–í–ò–°–ò–ú–û–°–¢–ò:
- Python 3.8+
- pydantic
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –∞–Ω–∞–ª–∏–∑–∞

–†–ï–ó–£–õ–¨–¢–ê–¢:
- –ï–¥–∏–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Å–µ–Ω –∏ –∞–Ω–∞–ª–∏–∑–∞
- –£–ø—Ä–æ—â–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

–ê–í–¢–û–†: AI Assistant
–î–ê–¢–ê: –°–µ–Ω—Ç—è–±—Ä—å 2025
"""

from datetime import datetime

from pydantic import BaseModel, Field


class SongMetadata(BaseModel):
    """–ë–∞–∑–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–µ—Å–Ω–∏"""

    genre: str = Field(
        description="–û—Å–Ω–æ–≤–Ω–æ–π –∂–∞–Ω—Ä –º—É–∑—ã–∫–∏ (hip-hop, rap, r&b, pop, etc.)"
    )
    subgenre: str | None = Field(default=None, description="–ü–æ–¥–∂–∞–Ω—Ä –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ")
    mood: str = Field(
        description="–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ (energetic, melancholic, aggressive, chill, etc.)"
    )
    year_estimate: int | None = Field(
        default=None, description="–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≥–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ —Å—Ç–∏–ª—é"
    )
    energy_level: str = Field(description="–£—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ (low, medium, high)")
    explicit_content: bool = Field(
        default=False, description="–°–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —è–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"
    )


class LyricsAnalysis(BaseModel):
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏"""

    structure: str = Field(
        description="–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Å–Ω–∏ (verse-chorus-verse-bridge-outro, etc.)"
    )
    rhyme_scheme: str = Field(description="–°—Ö–µ–º–∞ —Ä–∏—Ñ–º–æ–≤–∫–∏ (ABAB, AABB, free, etc.)")
    complexity_level: str = Field(
        description="–°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ (simple, medium, complex)"
    )
    main_themes: list[str] = Field(description="–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –ø–µ—Å–Ω–∏")
    emotional_tone: str = Field(
        description="–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω (positive, negative, neutral, mixed)"
    )
    storytelling_type: str = Field(
        description="–¢–∏–ø –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è (narrative, abstract, conversational, etc.)"
    )
    wordplay_quality: str = Field(
        description="–ö–∞—á–µ—Å—Ç–≤–æ –∏–≥—Ä—ã —Å–ª–æ–≤ (basic, good, excellent)"
    )


class QualityMetrics(BaseModel):
    """–ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ '–∂–∏–≤–æ—Å—Ç–∏' —Ç—Ä–µ–∫–∞"""

    authenticity_score: float = Field(
        ge=0.0, le=1.0, description="–û—Ü–µ–Ω–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏ (0-1)"
    )
    lyrical_creativity: float = Field(
        ge=0.0, le=1.0, description="–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ (0-1)"
    )
    commercial_appeal: float = Field(
        ge=0.0, le=1.0, description="–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (0-1)"
    )
    uniqueness: float = Field(
        ge=0.0, le=1.0, description="–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥—Ä—É–≥–∏—Ö —Ç—Ä–µ–∫–æ–≤ (0-1)"
    )
    overall_quality: str = Field(
        description="–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ (poor, average, good, excellent)"
    )
    ai_likelihood: float = Field(
        ge=0.0, le=1.0, description="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–∑–¥–∞–Ω –ò–ò (0-1)"
    )


class EnhancedSongData(BaseModel):
    """–ü–æ–ª–Ω–∞—è –æ–±–æ–≥–∞—â–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Å–Ω–µ"""

    # –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ scraper'–∞
    url: str
    title: str
    artist: str
    lyrics: str
    genius_id: int | None = None
    scraped_date: str
    word_count: int

    # AI-–æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    ai_metadata: SongMetadata
    ai_analysis: LyricsAnalysis
    quality_metrics: QualityMetrics

    # –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    analysis_date: str = Field(default_factory=lambda: datetime.now().isoformat())
    model_version: str = Field(default="gemini-1.5-flash")


class AnalysisResult(BaseModel):
    """–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –æ–¥–Ω–æ–π –ø–µ—Å–Ω–∏"""

    success: bool
    song_data: EnhancedSongData | None = None
    error_message: str | None = None
    processing_time: float


class BatchAnalysisStats(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""

    total_processed: int
    successful: int
    failed: int
    average_processing_time: float
    start_time: str
    end_time: str
    errors: list[str] = Field(default_factory=list)


# ===== SPOTIFY API MODELS =====


class SpotifyAudioFeatures(BaseModel):
    """–ê—É–¥–∏–æ-—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç—Ä–µ–∫–∞ –∏–∑ Spotify"""

    danceability: float = Field(ge=0.0, le=1.0, description="–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ—Å—Ç—å (0.0-1.0)")
    energy: float = Field(ge=0.0, le=1.0, description="–≠–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å (0.0-1.0)")
    valence: float = Field(ge=0.0, le=1.0, description="–ü–æ–∑–∏—Ç–∏–≤–Ω–æ—Å—Ç—å (0.0-1.0)")
    tempo: float = Field(ge=0.0, description="–¢–µ–º–ø –≤ BPM")
    acousticness: float = Field(ge=0.0, le=1.0, description="–ê–∫—É—Å—Ç–∏—á–Ω–æ—Å—Ç—å (0.0-1.0)")
    instrumentalness: float = Field(
        ge=0.0, le=1.0, description="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ—Å—Ç—å (0.0-1.0)"
    )
    speechiness: float = Field(ge=0.0, le=1.0, description="–†–µ—á–µ–≤–æ—Å—Ç—å (0.0-1.0)")
    liveness: float = Field(ge=0.0, le=1.0, description="–ñ–∏–≤–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ (0.0-1.0)")
    loudness: float = Field(description="–ì—Ä–æ–º–∫–æ—Å—Ç—å –≤ dB")


class SpotifyArtist(BaseModel):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—Ä—Ç–∏—Å—Ç–µ –∏–∑ Spotify"""

    spotify_id: str = Field(description="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∞—Ä—Ç–∏—Å—Ç–∞ –≤ Spotify")
    name: str = Field(description="–ò–º—è –∞—Ä—Ç–∏—Å—Ç–∞")
    genres: list[str] = Field(default_factory=list, description="–ñ–∞–Ω—Ä—ã –∞—Ä—Ç–∏—Å—Ç–∞")
    popularity: int = Field(ge=0, le=100, description="–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –∞—Ä—Ç–∏—Å—Ç–∞ (0-100)")
    followers: int = Field(ge=0, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
    image_url: str | None = Field(default=None, description="URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞—Ä—Ç–∏—Å—Ç–∞")
    spotify_url: str = Field(description="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –≤ Spotify")


class SpotifyTrack(BaseModel):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–µ –∏–∑ Spotify"""

    spotify_id: str = Field(description="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ç—Ä–µ–∫–∞ –≤ Spotify")
    name: str = Field(description="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞")
    artist_id: str = Field(description="ID –∞—Ä—Ç–∏—Å—Ç–∞ –≤ Spotify")
    album_name: str | None = Field(default=None, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞")
    release_date: str | None = Field(default=None, description="–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞")
    duration_ms: int | None = Field(
        default=None, description="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö"
    )
    popularity: int = Field(ge=0, le=100, description="–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å —Ç—Ä–µ–∫–∞ (0-100)")
    explicit: bool = Field(default=False, description="–°–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç—Ä–µ–∫ —è–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    spotify_url: str = Field(description="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–∫ –≤ Spotify")
    preview_url: str | None = Field(default=None, description="URL –ø—Ä–µ–≤—å—é —Ç—Ä–µ–∫–∞")
    audio_features: SpotifyAudioFeatures | None = Field(
        default=None, description="–ê—É–¥–∏–æ-—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"
    )


class SpotifyEnrichmentResult(BaseModel):
    """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Spotify"""

    success: bool
    artist_data: SpotifyArtist | None = None
    track_data: SpotifyTrack | None = None
    error_message: str | None = None
    processing_time: float
    api_calls_used: int = Field(
        default=0, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö API –≤—ã–∑–æ–≤–æ–≤"
    )
