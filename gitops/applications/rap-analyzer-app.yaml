apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rap-analyzer
  namespace: argocd
  labels:
    app.kubernetes.io/name: rap-analyzer
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  # Source configuration
  source:
    repoURL: 'https://github.com/Vastargazing/rap-scraper-project'
    targetRevision: HEAD
    path: helm/rap-analyzer
    helm:
      # Helm values override
      valueFiles:
        - values.yaml
      values: |
        # Environment-specific overrides
        global:
          imageRegistry: "your-registry.com"
          
        # Production configuration
        app:
          api:
            replicaCount: 5
            resources:
              requests:
                memory: "1Gi"
                cpu: "500m"
              limits:
                memory: "4Gi"
                cpu: "2000m"
            
            autoscaling:
              enabled: true
              minReplicas: 5
              maxReplicas: 20
              targetCPUUtilizationPercentage: 60
              targetMemoryUtilizationPercentage: 70
        
        # Database production settings
        postgresql:
          enabled: true
          primary:
            resources:
              requests:
                memory: "2Gi"
                cpu: "1000m"
              limits:
                memory: "8Gi"
                cpu: "4000m"
            persistence:
              size: 100Gi
        
        # Monitoring production settings
        monitoring:
          enabled: true
          prometheus:
            resources:
              requests:
                memory: "1Gi"
                cpu: "500m"
              limits:
                memory: "4Gi"
                cpu: "2000m"
            retention: "720h"  # 30 days
          
          grafana:
            resources:
              requests:
                memory: "512Mi"
                cpu: "250m"
              limits:
                memory: "2Gi"
                cpu: "1000m"
            persistence:
              enabled: true
              size: 20Gi

  # Destination configuration
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: rap-analyzer

  # Sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  # Health check configuration
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: ""
      kind: ConfigMap
      jsonPointers:
        - /data

  # Revision history
  revisionHistoryLimit: 10
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: rap-analyzer-project
  namespace: argocd
spec:
  description: "Rap Analyzer Production Project"
  
  # Source repositories
  sourceRepos:
    - 'https://github.com/Vastargazing/rap-scraper-project'
    - 'https://charts.bitnami.com/bitnami'
    - 'https://prometheus-community.github.io/helm-charts'
    - 'https://grafana.github.io/helm-charts'
  
  # Allowed destinations
  destinations:
    - namespace: 'rap-analyzer'
      server: 'https://kubernetes.default.svc'
    - namespace: 'rap-analyzer-staging'
      server: 'https://kubernetes.default.svc'
    - namespace: 'rap-analyzer-dev'
      server: 'https://kubernetes.default.svc'
  
  # Cluster resource whitelist
  clusterResourceWhitelist:
    - group: ""
      kind: Namespace
    - group: "rbac.authorization.k8s.io"
      kind: ClusterRole
    - group: "rbac.authorization.k8s.io" 
      kind: ClusterRoleBinding
    - group: "networking.k8s.io"
      kind: Ingress
  
  # Namespace resource whitelist
  namespaceResourceWhitelist:
    - group: ""
      kind: ConfigMap
    - group: ""
      kind: Secret
    - group: ""
      kind: Service
    - group: ""
      kind: ServiceAccount
    - group: "apps"
      kind: Deployment
    - group: "apps"
      kind: StatefulSet
    - group: "autoscaling"
      kind: HorizontalPodAutoscaler
    - group: "networking.k8s.io"
      kind: NetworkPolicy
  
  # RBAC roles
  roles:
    - name: admin
      description: "Full access to rap-analyzer project"
      policies:
        - p, proj:rap-analyzer-project:admin, applications, *, rap-analyzer-project/*, allow
        - p, proj:rap-analyzer-project:admin, repositories, *, *, allow
        - p, proj:rap-analyzer-project:admin, certificates, *, *, allow
      groups:
        - rap-analyzer-admins
    
    - name: developer
      description: "Developer access to rap-analyzer project"  
      policies:
        - p, proj:rap-analyzer-project:developer, applications, get, rap-analyzer-project/*, allow
        - p, proj:rap-analyzer-project:developer, applications, sync, rap-analyzer-project/*, allow
        - p, proj:rap-analyzer-project:developer, repositories, get, *, allow
      groups:
        - rap-analyzer-developers