{
  "summary": {
    "total_files": 84,
    "legacy_files": 15,
    "test_files": 6,
    "active_files": 69,
    "average_complexity": 35.345238095238095,
    "migration_status": false
  },
  "duplicates_analysis": [
    {
      "files": [
        "main.py",
        "archive\\ai_context_manager_legacy.py",
        "archive\\gemma_27b_fixed.py",
        "archive\\performance_monitor.py",
        "archive\\qwen_analyzer.py",
        "archive\\spotify_enhancer_sqlite_backup.py",
        "scripts\\db_browser.py",
        "src\\analyzers\\algorithmic_analyzer.py",
        "src\\analyzers\\algorithmic_analyzer.py",
        "src\\analyzers\\algorithmic_analyzer.py",
        "src\\analyzers\\algorithmic_analyzer.py",
        "src\\analyzers\\algorithmic_analyzer.py",
        "src\\analyzers\\algorithmic_analyzer.py",
        "src\\analyzers\\emotion_analyzer.py",
        "src\\analyzers\\emotion_analyzer.py",
        "src\\analyzers\\mass_qwen_analysis.py",
        "src\\analyzers\\mass_qwen_analysis.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\analyzers\\ollama_analyzer.py",
        "src\\analyzers\\optimized_ollama_analyzer.py",
        "src\\analyzers\\optimized_ollama_analyzer.py",
        "src\\analyzers\\simplified_feature_analyzer.py",
        "src\\analyzers\\simplified_feature_analyzer.py",
        "src\\analyzers\\simplified_feature_analyzer.py",
        "src\\cli\\analyzer_cli.py",
        "src\\cli\\batch_processor.py",
        "src\\cli\\performance_monitor.py",
        "src\\cli\\performance_monitor.py",
        "src\\core\\app.py",
        "src\\core\\app.py",
        "src\\core\\config.py",
        "src\\core\\config.py",
        "src\\database\\postgres_adapter.py",
        "src\\enhancers\\bulk_spotify_enhancement.py",
        "src\\enhancers\\bulk_spotify_enhancement.py",
        "src\\enhancers\\bulk_spotify_enhancement.py",
        "src\\enhancers\\spotify_analysis_utils.py",
        "src\\enhancers\\spotify_enhancer.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface.py",
        "src\\interfaces\\analyzer_interface_archive.py",
        "src\\scrapers\\rap_scraper_postgres.py",
        "src\\scrapers\\rap_scraper_postgres.py",
        "src\\scrapers\\rap_scraper_postgres.py",
        "src\\scrapers\\rap_scraper_postgres.py",
        "src\\scrapers\\rap_scraper_postgres.py",
        "src\\scrapers\\ultra_rap_scraper_postgres.py",
        "src\\scrapers\\ultra_rap_scraper_postgres.py",
        "src\\scrapers\\ultra_rap_scraper_postgres.py",
        "src\\scrapers\\ultra_rap_scraper_postgres.py",
        "src\\scrapers\\ultra_rap_scraper_postgres.py",
        "src\\scrapers\\ultra_rap_scraper_postgres.py",
        "src\\utils\\postgres_db.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_context_manager.py",
        "scripts\\tools\\ai_project_analyzer.py",
        "scripts\\tools\\ai_project_analyzer.py",
        "scripts\\tools\\ai_project_analyzer.py",
        "scripts\\tools\\ai_project_analyzer_fixed.py",
        "scripts\\tools\\ai_project_analyzer_fixed.py",
        "scripts\\tools\\comprehensive_ai_stats.py",
        "scripts\\tools\\database_diagnostics.py",
        "scripts\\tools\\dependency_manager.py",
        "scripts\\utils\\code_analyzer.py",
        "monitoring\\scripts\\system_monitor.py",
        "archive\\legacy_monitoring_full\\db_monitor.py",
        "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py",
        "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py",
        "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py"
      ],
      "similarity": 1.1341463414634145,
      "functions": [
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__",
        "__init__"
      ]
    },
    {
      "files": [
        "archive\\ai_context_manager_legacy.py",
        "archive\\gemma_27b_fixed.py",
        "archive\\spotify_enhancer_sqlite_backup.py",
        "scripts\\continue_spotify_enhancement.py",
        "scripts\\rap_scraper_cli.py",
        "src\\analyzers\\multi_model_analyzer_backup.py",
        "src\\cli\\analyzer_cli.py",
        "src\\enhancers\\bulk_spotify_enhancement.py",
        "src\\enhancers\\spotify_analysis_utils.py",
        "src\\scrapers\\rap_scraper_postgres.py",
        "src\\utils\\setup_spotify.py",
        "scripts\\archive\\run_full_analysis.py",
        "scripts\\development\\demo_simplified_ml_features.py",
        "scripts\\development\\run_scraping_debug.py",
        "scripts\\development\\run_scraping_improved.py",
        "scripts\\tools\\ai_project_analyzer.py",
        "scripts\\tools\\ai_project_analyzer_fixed.py",
        "scripts\\tools\\batch_ai_analysis.py",
        "scripts\\tools\\comprehensive_ai_stats.py",
        "scripts\\tools\\database_diagnostics.py",
        "scripts\\tools\\dependency_manager.py",
        "scripts\\utils\\code_analyzer.py",
        "monitoring\\scripts\\system_monitor.py",
        "archive\\legacy_monitoring_full\\db_monitor.py"
      ],
      "similarity": 0.5106382978723404,
      "functions": [
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main",
        "main"
      ]
    },
    {
      "files": [
        "src\\analyzers\\create_visual_analysis.py",
        "scripts\\tools\\create_cli_showcase.py",
        "archive\\legacy_monitoring_full\\db_monitor.py"
      ],
      "similarity": 0.5,
      "functions": [
        "get_database_stats",
        "get_database_stats",
        "get_database_stats"
      ]
    },
    {
      "files": [
        "scripts\\archive\\run_full_analysis.py",
        "scripts\\tools\\batch_ai_analysis.py"
      ],
      "similarity": 1.0,
      "functions": [
        "count_remaining",
        "count_remaining"
      ]
    }
  ],
  "unused_files": [],
  "architecture_violations": [
    "🗂️ New module using legacy SQLite: scripts\\continue_spotify_enhancement.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\rap_scraper_cli.py -> sqlite3",
    "🗂️ New module using legacy SQLite: tests\\conftest.py -> sqlite3",
    "🗂️ New module using legacy SQLite: tests\\test_spotify_enhancer.py -> sqlite3",
    "🗂️ New module using legacy SQLite: src\\analyzers\\create_visual_analysis.py -> sqlite3",
    "🗂️ New module using legacy SQLite: src\\enhancers\\bulk_spotify_enhancement.py -> sqlite3",
    "🗂️ New module using legacy SQLite: src\\enhancers\\spotify_analysis_utils.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\ai_project_analyzer.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\ai_project_analyzer_fixed.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\batch_ai_analysis.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\check_spotify_coverage.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\comprehensive_ai_stats.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\create_cli_showcase.py -> sqlite3",
    "🗂️ New module using legacy SQLite: scripts\\tools\\monitor_qwen_progress.py -> sqlite3",
    "🔄 PostgreSQL migration incomplete: 38.7% migrated"
  ],
  "security_issues": [
    "🔒 Hardcoded password in tests\\conftest.py",
    "🔒 Hardcoded password in tests\\test_spotify_enhancer.py",
    "🎲 Insecure random for security in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "⚠️ Pickle usage (security risk) in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "⚠️ Pickle usage (security risk) in scripts\\tools\\ai_context_manager.py",
    "💉 Potential SQL injection in scripts\\tools\\ai_project_analyzer.py",
    "⚠️ Pickle usage (security risk) in scripts\\tools\\ai_project_analyzer.py",
    "💉 Potential SQL injection in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚠️ Pickle usage (security risk) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "💉 Potential SQL injection in scripts\\tools\\check_spotify_coverage.py",
    "💉 Potential SQL injection in scripts\\tools\\database_diagnostics.py"
  ],
  "performance_issues": [
    "🗃️ Potential N+1 query pattern in main.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in main.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in main.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in main.py",
    "💾 Memory-intensive operations in main.py",
    "⏳ Synchronous I/O in loops in main.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\ai_context_manager_legacy.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\ai_context_manager_legacy.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\ai_context_manager_legacy.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in archive\\ai_context_manager_legacy.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\ai_context_manager_legacy.py",
    "💾 Memory-intensive operations in archive\\ai_context_manager_legacy.py",
    "⏳ Synchronous I/O in loops in archive\\ai_context_manager_legacy.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\gemma_27b_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\gemma_27b_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\gemma_27b_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\gemma_27b_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\gemma_27b_fixed.py",
    "💾 Memory-intensive operations in archive\\gemma_27b_fixed.py",
    "⏳ Synchronous I/O in loops in archive\\gemma_27b_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\performance_monitor.py",
    "💾 Memory-intensive operations in archive\\performance_monitor.py",
    "⏳ Synchronous I/O in loops in archive\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in archive\\qwen_analyzer.py",
    "💾 Memory-intensive operations in archive\\qwen_analyzer.py",
    "🗃️ Potential N+1 query pattern in archive\\spotify_enhancer_sqlite_backup.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in archive\\spotify_enhancer_sqlite_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in archive\\spotify_enhancer_sqlite_backup.py",
    "💾 Memory-intensive operations in archive\\spotify_enhancer_sqlite_backup.py",
    "⏳ Synchronous I/O in loops in archive\\spotify_enhancer_sqlite_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\continue_spotify_enhancement.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\continue_spotify_enhancement.py",
    "💾 Memory-intensive operations in scripts\\continue_spotify_enhancement.py",
    "🗃️ Potential N+1 query pattern in scripts\\db_browser.py",
    "💾 Memory-intensive operations in scripts\\db_browser.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\rap_scraper_cli.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\rap_scraper_cli.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\rap_scraper_cli.py",
    "💾 Memory-intensive operations in scripts\\rap_scraper_cli.py",
    "⏳ Synchronous I/O in loops in scripts\\rap_scraper_cli.py",
    "💾 Memory-intensive operations in tests\\test_integration_comprehensive.py",
    "⏳ Synchronous I/O in loops in tests\\test_integration_comprehensive.py",
    "🔄 Deep nested loops (depth: 3) in src\\analyzers\\algorithmic_analyzer.py",
    "🗃️ Potential N+1 query pattern in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\algorithmic_analyzer.py",
    "💾 Memory-intensive operations in src\\analyzers\\algorithmic_analyzer.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\algorithmic_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\create_visual_analysis.py",
    "💾 Memory-intensive operations in src\\analyzers\\create_visual_analysis.py",
    "🗃️ Potential N+1 query pattern in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\emotion_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\emotion_analyzer.py",
    "💾 Memory-intensive operations in src\\analyzers\\emotion_analyzer.py",
    "🗃️ Potential N+1 query pattern in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\mass_qwen_analysis.py",
    "💾 Memory-intensive operations in src\\analyzers\\mass_qwen_analysis.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\mass_qwen_analysis.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer.py",
    "💾 Memory-intensive operations in src\\analyzers\\multi_model_analyzer.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\multi_model_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\multi_model_analyzer_backup.py",
    "💾 Memory-intensive operations in src\\analyzers\\multi_model_analyzer_backup.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\multi_model_analyzer_backup.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\ollama_analyzer.py",
    "💾 Memory-intensive operations in src\\analyzers\\ollama_analyzer.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\ollama_analyzer.py",
    "💾 Memory-intensive operations in src\\analyzers\\optimized_ollama_analyzer.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\optimized_ollama_analyzer.py",
    "🔄 Deep nested loops (depth: 3) in src\\analyzers\\simplified_feature_analyzer.py",
    "🗃️ Potential N+1 query pattern in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\analyzers\\simplified_feature_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\analyzers\\simplified_feature_analyzer.py",
    "💾 Memory-intensive operations in src\\analyzers\\simplified_feature_analyzer.py",
    "⏳ Synchronous I/O in loops in src\\analyzers\\simplified_feature_analyzer.py",
    "🗃️ Potential N+1 query pattern in src\\cli\\analyzer_cli.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\analyzer_cli.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\analyzer_cli.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\analyzer_cli.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\analyzer_cli.py",
    "💾 Memory-intensive operations in src\\cli\\analyzer_cli.py",
    "⏳ Synchronous I/O in loops in src\\cli\\analyzer_cli.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\batch_processor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\batch_processor.py",
    "💾 Memory-intensive operations in src\\cli\\batch_processor.py",
    "⏳ Synchronous I/O in loops in src\\cli\\batch_processor.py",
    "🗃️ Potential N+1 query pattern in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\cli\\performance_monitor.py",
    "💾 Memory-intensive operations in src\\cli\\performance_monitor.py",
    "⏳ Synchronous I/O in loops in src\\cli\\performance_monitor.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\core\\app.py",
    "💾 Memory-intensive operations in src\\core\\config.py",
    "⏳ Synchronous I/O in loops in src\\core\\config.py",
    "🗃️ Potential N+1 query pattern in src\\database\\postgres_adapter.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\database\\postgres_adapter.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\database\\postgres_adapter.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\database\\postgres_adapter.py",
    "💾 Memory-intensive operations in src\\database\\postgres_adapter.py",
    "🗃️ Potential N+1 query pattern in src\\enhancers\\bulk_spotify_enhancement.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in src\\enhancers\\bulk_spotify_enhancement.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\enhancers\\bulk_spotify_enhancement.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\enhancers\\bulk_spotify_enhancement.py",
    "💾 Memory-intensive operations in src\\enhancers\\bulk_spotify_enhancement.py",
    "⏳ Synchronous I/O in loops in src\\enhancers\\bulk_spotify_enhancement.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\enhancers\\spotify_analysis_utils.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\enhancers\\spotify_analysis_utils.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\enhancers\\spotify_analysis_utils.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\enhancers\\spotify_analysis_utils.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\enhancers\\spotify_analysis_utils.py",
    "⏳ Synchronous I/O in loops in src\\enhancers\\spotify_analysis_utils.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\enhancers\\spotify_enhancer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\enhancers\\spotify_enhancer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\enhancers\\spotify_enhancer.py",
    "💾 Memory-intensive operations in src\\enhancers\\spotify_enhancer.py",
    "💾 Memory-intensive operations in src\\interfaces\\analyzer_interface.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\scrapers\\rap_scraper_postgres.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\scrapers\\rap_scraper_postgres.py",
    "💾 Memory-intensive operations in src\\scrapers\\rap_scraper_postgres.py",
    "⏳ Synchronous I/O in loops in src\\scrapers\\rap_scraper_postgres.py",
    "🗃️ Potential N+1 query pattern in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "💾 Memory-intensive operations in src\\scrapers\\ultra_rap_scraper_postgres.py",
    "💾 Memory-intensive operations in src\\utils\\file_utils.py",
    "🗃️ Potential N+1 query pattern in src\\utils\\postgres_db.py",
    "💾 Memory-intensive operations in src\\utils\\postgres_db.py",
    "⏳ Synchronous I/O in loops in src\\utils\\postgres_db.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in scripts\\archive\\run_full_analysis.py",
    "🗃️ Potential N+1 query pattern in scripts\\development\\analyze_confidence_results.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in scripts\\development\\analyze_confidence_results.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\development\\analyze_confidence_results.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\development\\analyze_confidence_results.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\development\\analyze_confidence_results.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\development\\analyze_confidence_results.py",
    "💾 Memory-intensive operations in scripts\\development\\analyze_confidence_results.py",
    "⏳ Synchronous I/O in loops in scripts\\development\\analyze_confidence_results.py",
    "🗃️ Potential N+1 query pattern in scripts\\development\\demo_simplified_ml_features.py",
    "⏳ Synchronous I/O in loops in scripts\\development\\demo_simplified_ml_features.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\development\\run_scraping_debug.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\development\\run_scraping_debug.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\development\\run_scraping_debug.py",
    "💾 Memory-intensive operations in scripts\\development\\run_scraping_debug.py",
    "⏳ Synchronous I/O in loops in scripts\\development\\run_scraping_debug.py",
    "⏳ Synchronous I/O in loops in scripts\\development\\run_scraping_improved.py",
    "🔄 Deep nested loops (depth: 3) in scripts\\tools\\ai_context_manager.py",
    "🗃️ Potential N+1 query pattern in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: sum() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_context_manager.py",
    "💾 Memory-intensive operations in scripts\\tools\\ai_context_manager.py",
    "⏳ Synchronous I/O in loops in scripts\\tools\\ai_context_manager.py",
    "🗃️ Potential N+1 query pattern in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer.py",
    "💾 Memory-intensive operations in scripts\\tools\\ai_project_analyzer.py",
    "⏳ Synchronous I/O in loops in scripts\\tools\\ai_project_analyzer.py",
    "🗃️ Potential N+1 query pattern in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: max() called in loop (cache result) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\ai_project_analyzer_fixed.py",
    "💾 Memory-intensive operations in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⏳ Synchronous I/O in loops in scripts\\tools\\ai_project_analyzer_fixed.py",
    "⚡ Inefficient operation in loop: min() called in loop (cache result) in scripts\\tools\\batch_ai_analysis.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\check_spotify_coverage.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\check_spotify_coverage.py",
    "💾 Memory-intensive operations in scripts\\tools\\check_spotify_coverage.py",
    "💾 Memory-intensive operations in scripts\\tools\\comprehensive_ai_stats.py",
    "⏳ Synchronous I/O in loops in scripts\\tools\\comprehensive_ai_stats.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\create_cli_showcase.py",
    "💾 Memory-intensive operations in scripts\\tools\\create_cli_showcase.py",
    "🗃️ Potential N+1 query pattern in scripts\\tools\\database_diagnostics.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\database_diagnostics.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\database_diagnostics.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\database_diagnostics.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\tools\\database_diagnostics.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\database_diagnostics.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\database_diagnostics.py",
    "💾 Memory-intensive operations in scripts\\tools\\database_diagnostics.py",
    "🗃️ Potential N+1 query pattern in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\tools\\dependency_manager.py",
    "💾 Memory-intensive operations in scripts\\tools\\dependency_manager.py",
    "⏳ Synchronous I/O in loops in scripts\\tools\\dependency_manager.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in scripts\\utils\\code_analyzer.py",
    "💾 Memory-intensive operations in scripts\\utils\\code_analyzer.py",
    "⏳ Synchronous I/O in loops in scripts\\utils\\code_analyzer.py",
    "⚡ Inefficient operation in loop: list.append() in loop (consider list comprehension) in monitoring\\scripts\\system_monitor.py",
    "⚡ Inefficient operation in loop: len() called in loop (cache result) in monitoring\\scripts\\system_monitor.py",
    "⏳ Synchronous I/O in loops in monitoring\\scripts\\system_monitor.py",
    "🗃️ Potential N+1 query pattern in archive\\legacy_monitoring_full\\db_monitor.py",
    "⏳ Synchronous I/O in loops in archive\\legacy_monitoring_full\\db_monitor.py",
    "🗃️ Potential N+1 query pattern in archive\\legacy_monitoring\\monitoring\\monitor_gemma_progress.py",
    "🗃️ Potential N+1 query pattern in AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py",
    "💾 Memory-intensive operations in AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py",
    "⏳ Synchronous I/O in loops in AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py"
  ],
  "ai_recommendations": [
    "🧪 Тестирование: Низкое покрытие тестами - добавьте unit тесты",
    "🏗️ Архитектура: Много нарушений - пересмотрите слои приложения"
  ],
  "export_data": {
    "complexity_scores": {
      "api.py": 6,
      "main.py": 135,
      "archive\\ai_context_manager_legacy.py": 39,
      "archive\\gemma_27b_fixed.py": 36,
      "archive\\performance_monitor.py": 23,
      "archive\\qwen_analyzer.py": 37,
      "archive\\spotify_enhancer_sqlite_backup.py": 38,
      "scripts\\continue_spotify_enhancement.py": 9,
      "scripts\\db_browser.py": 22,
      "scripts\\monitor_postgres.py": 7,
      "scripts\\rap_scraper_cli.py": 76,
      "scripts\\run_spotify_enhancement.py": 2,
      "scripts\\__init__.py": 1,
      "src\\__init__.py": 1,
      "tests\\conftest.py": 1,
      "tests\\test_emotion_analyzer.py": 9,
      "tests\\test_integration_comprehensive.py": 28,
      "tests\\test_models.py": 7,
      "tests\\test_spotify_enhancer.py": 2,
      "tests\\__init__.py": 1,
      "src\\analyzers\\algorithmic_analyzer.py": 204,
      "src\\analyzers\\create_visual_analysis.py": 8,
      "src\\analyzers\\emotion_analyzer.py": 115,
      "src\\analyzers\\mass_qwen_analysis.py": 81,
      "src\\analyzers\\multi_model_analyzer.py": 172,
      "src\\analyzers\\multi_model_analyzer_backup.py": 169,
      "src\\analyzers\\ollama_analyzer.py": 37,
      "src\\analyzers\\optimized_ollama_analyzer.py": 42,
      "src\\analyzers\\simplified_feature_analyzer.py": 97,
      "src\\analyzers\\__init__.py": 1,
      "src\\cli\\analyzer_cli.py": 31,
      "src\\cli\\batch_processor.py": 23,
      "src\\cli\\performance_monitor.py": 61,
      "src\\cli\\__init__.py": 1,
      "src\\core\\app.py": 31,
      "src\\core\\config.py": 51,
      "src\\core\\__init__.py": 1,
      "src\\database\\postgres_adapter.py": 33,
      "src\\enhancers\\bulk_spotify_enhancement.py": 89,
      "src\\enhancers\\spotify_analysis_utils.py": 17,
      "src\\enhancers\\spotify_enhancer.py": 43,
      "src\\enhancers\\__init__.py": 1,
      "src\\interfaces\\analyzer_interface.py": 108,
      "src\\interfaces\\analyzer_interface_archive.py": 8,
      "src\\interfaces\\__init__.py": 1,
      "src\\models\\models.py": 1,
      "src\\models\\__init__.py": 1,
      "src\\scrapers\\rap_scraper_postgres.py": 120,
      "src\\scrapers\\ultra_rap_scraper_postgres.py": 77,
      "src\\scrapers\\__init__.py": 1,
      "src\\utils\\config.py": 1,
      "src\\utils\\file_utils.py": 7,
      "src\\utils\\logging_utils.py": 3,
      "src\\utils\\postgres_db.py": 29,
      "src\\utils\\setup_spotify.py": 12,
      "src\\utils\\validation_utils.py": 5,
      "src\\utils\\__init__.py": 1,
      "scripts\\archive\\run_full_analysis.py": 12,
      "scripts\\development\\analyze_confidence_results.py": 14,
      "scripts\\development\\demo_confidence_scores.py": 5,
      "scripts\\development\\demo_simplified_ml_features.py": 16,
      "scripts\\development\\run_remaining_artists.py": 4,
      "scripts\\development\\run_scraping_debug.py": 14,
      "scripts\\development\\run_scraping_improved.py": 17,
      "scripts\\legacy\\rap_scraper_optimized.py": 2,
      "scripts\\legacy\\run_analysis.py": 2,
      "scripts\\legacy\\run_scraping.py": 2,
      "scripts\\tools\\ai_context_manager.py": 219,
      "scripts\\tools\\ai_project_analyzer.py": 107,
      "scripts\\tools\\ai_project_analyzer_fixed.py": 75,
      "scripts\\tools\\batch_ai_analysis.py": 13,
      "scripts\\tools\\check_spotify_coverage.py": 13,
      "scripts\\tools\\comprehensive_ai_stats.py": 8,
      "scripts\\tools\\create_cli_showcase.py": 8,
      "scripts\\tools\\database_diagnostics.py": 87,
      "scripts\\tools\\dependency_manager.py": 59,
      "scripts\\tools\\monitor_qwen_progress.py": 17,
      "scripts\\utils\\code_analyzer.py": 35,
      "monitoring\\scripts\\system_monitor.py": 12,
      "archive\\legacy_monitoring_full\\db_monitor.py": 16,
      "archive\\legacy_monitoring\\monitoring\\check_analysis_status.py": 9,
      "archive\\legacy_monitoring\\monitoring\\monitor_gemma_progress.py": 11,
      "archive\\legacy_monitoring\\monitoring\\__init__.py": 1,
      "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py": 28
    },
    "coupling_scores": {
      "api.py": 14,
      "main.py": 26,
      "archive\\ai_context_manager_legacy.py": 9,
      "archive\\gemma_27b_fixed.py": 11,
      "archive\\performance_monitor.py": 12,
      "archive\\qwen_analyzer.py": 13,
      "archive\\spotify_enhancer_sqlite_backup.py": 19,
      "scripts\\continue_spotify_enhancement.py": 6,
      "scripts\\db_browser.py": 7,
      "scripts\\monitor_postgres.py": 5,
      "scripts\\rap_scraper_cli.py": 31,
      "scripts\\run_spotify_enhancement.py": 3,
      "scripts\\__init__.py": 0,
      "src\\__init__.py": 0,
      "tests\\conftest.py": 9,
      "tests\\test_emotion_analyzer.py": 9,
      "tests\\test_integration_comprehensive.py": 15,
      "tests\\test_models.py": 3,
      "tests\\test_spotify_enhancer.py": 7,
      "tests\\__init__.py": 0,
      "src\\analyzers\\algorithmic_analyzer.py": 23,
      "src\\analyzers\\create_visual_analysis.py": 8,
      "src\\analyzers\\emotion_analyzer.py": 21,
      "src\\analyzers\\mass_qwen_analysis.py": 18,
      "src\\analyzers\\multi_model_analyzer.py": 22,
      "src\\analyzers\\multi_model_analyzer_backup.py": 19,
      "src\\analyzers\\ollama_analyzer.py": 7,
      "src\\analyzers\\optimized_ollama_analyzer.py": 9,
      "src\\analyzers\\simplified_feature_analyzer.py": 21,
      "src\\analyzers\\__init__.py": 4,
      "src\\cli\\analyzer_cli.py": 9,
      "src\\cli\\batch_processor.py": 11,
      "src\\cli\\performance_monitor.py": 22,
      "src\\cli\\__init__.py": 3,
      "src\\core\\app.py": 12,
      "src\\core\\config.py": 8,
      "src\\core\\__init__.py": 2,
      "src\\database\\postgres_adapter.py": 13,
      "src\\enhancers\\bulk_spotify_enhancement.py": 21,
      "src\\enhancers\\spotify_analysis_utils.py": 4,
      "src\\enhancers\\spotify_enhancer.py": 12,
      "src\\enhancers\\__init__.py": 0,
      "src\\interfaces\\analyzer_interface.py": 36,
      "src\\interfaces\\analyzer_interface_archive.py": 5,
      "src\\interfaces\\__init__.py": 1,
      "src\\models\\models.py": 3,
      "src\\models\\__init__.py": 0,
      "src\\scrapers\\rap_scraper_postgres.py": 26,
      "src\\scrapers\\ultra_rap_scraper_postgres.py": 27,
      "src\\scrapers\\__init__.py": 0,
      "src\\utils\\config.py": 3,
      "src\\utils\\file_utils.py": 4,
      "src\\utils\\logging_utils.py": 4,
      "src\\utils\\postgres_db.py": 8,
      "src\\utils\\setup_spotify.py": 4,
      "src\\utils\\validation_utils.py": 2,
      "src\\utils\\__init__.py": 3,
      "scripts\\archive\\run_full_analysis.py": 9,
      "scripts\\development\\analyze_confidence_results.py": 1,
      "scripts\\development\\demo_confidence_scores.py": 4,
      "scripts\\development\\demo_simplified_ml_features.py": 6,
      "scripts\\development\\run_remaining_artists.py": 4,
      "scripts\\development\\run_scraping_debug.py": 7,
      "scripts\\development\\run_scraping_improved.py": 9,
      "scripts\\legacy\\rap_scraper_optimized.py": 3,
      "scripts\\legacy\\run_analysis.py": 3,
      "scripts\\legacy\\run_scraping.py": 3,
      "scripts\\tools\\ai_context_manager.py": 26,
      "scripts\\tools\\ai_project_analyzer.py": 14,
      "scripts\\tools\\ai_project_analyzer_fixed.py": 14,
      "scripts\\tools\\batch_ai_analysis.py": 9,
      "scripts\\tools\\check_spotify_coverage.py": 2,
      "scripts\\tools\\comprehensive_ai_stats.py": 5,
      "scripts\\tools\\create_cli_showcase.py": 4,
      "scripts\\tools\\database_diagnostics.py": 9,
      "scripts\\tools\\dependency_manager.py": 10,
      "scripts\\tools\\monitor_qwen_progress.py": 6,
      "scripts\\utils\\code_analyzer.py": 7,
      "monitoring\\scripts\\system_monitor.py": 6,
      "archive\\legacy_monitoring_full\\db_monitor.py": 8,
      "archive\\legacy_monitoring\\monitoring\\check_analysis_status.py": 5,
      "archive\\legacy_monitoring\\monitoring\\monitor_gemma_progress.py": 5,
      "archive\\legacy_monitoring\\monitoring\\__init__.py": 0,
      "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py": 9
    },
    "duplicates": [
      {
        "similarity": 1.1341463414634145,
        "files": [
          "main.py",
          "archive\\ai_context_manager_legacy.py",
          "archive\\gemma_27b_fixed.py",
          "archive\\performance_monitor.py",
          "archive\\qwen_analyzer.py",
          "archive\\spotify_enhancer_sqlite_backup.py",
          "scripts\\db_browser.py",
          "src\\analyzers\\algorithmic_analyzer.py",
          "src\\analyzers\\algorithmic_analyzer.py",
          "src\\analyzers\\algorithmic_analyzer.py",
          "src\\analyzers\\algorithmic_analyzer.py",
          "src\\analyzers\\algorithmic_analyzer.py",
          "src\\analyzers\\algorithmic_analyzer.py",
          "src\\analyzers\\emotion_analyzer.py",
          "src\\analyzers\\emotion_analyzer.py",
          "src\\analyzers\\mass_qwen_analysis.py",
          "src\\analyzers\\mass_qwen_analysis.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\analyzers\\ollama_analyzer.py",
          "src\\analyzers\\optimized_ollama_analyzer.py",
          "src\\analyzers\\optimized_ollama_analyzer.py",
          "src\\analyzers\\simplified_feature_analyzer.py",
          "src\\analyzers\\simplified_feature_analyzer.py",
          "src\\analyzers\\simplified_feature_analyzer.py",
          "src\\cli\\analyzer_cli.py",
          "src\\cli\\batch_processor.py",
          "src\\cli\\performance_monitor.py",
          "src\\cli\\performance_monitor.py",
          "src\\core\\app.py",
          "src\\core\\app.py",
          "src\\core\\config.py",
          "src\\core\\config.py",
          "src\\database\\postgres_adapter.py",
          "src\\enhancers\\bulk_spotify_enhancement.py",
          "src\\enhancers\\bulk_spotify_enhancement.py",
          "src\\enhancers\\bulk_spotify_enhancement.py",
          "src\\enhancers\\spotify_analysis_utils.py",
          "src\\enhancers\\spotify_enhancer.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface.py",
          "src\\interfaces\\analyzer_interface_archive.py",
          "src\\scrapers\\rap_scraper_postgres.py",
          "src\\scrapers\\rap_scraper_postgres.py",
          "src\\scrapers\\rap_scraper_postgres.py",
          "src\\scrapers\\rap_scraper_postgres.py",
          "src\\scrapers\\rap_scraper_postgres.py",
          "src\\scrapers\\ultra_rap_scraper_postgres.py",
          "src\\scrapers\\ultra_rap_scraper_postgres.py",
          "src\\scrapers\\ultra_rap_scraper_postgres.py",
          "src\\scrapers\\ultra_rap_scraper_postgres.py",
          "src\\scrapers\\ultra_rap_scraper_postgres.py",
          "src\\scrapers\\ultra_rap_scraper_postgres.py",
          "src\\utils\\postgres_db.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_context_manager.py",
          "scripts\\tools\\ai_project_analyzer.py",
          "scripts\\tools\\ai_project_analyzer.py",
          "scripts\\tools\\ai_project_analyzer.py",
          "scripts\\tools\\ai_project_analyzer_fixed.py",
          "scripts\\tools\\ai_project_analyzer_fixed.py",
          "scripts\\tools\\comprehensive_ai_stats.py",
          "scripts\\tools\\database_diagnostics.py",
          "scripts\\tools\\dependency_manager.py",
          "scripts\\utils\\code_analyzer.py",
          "monitoring\\scripts\\system_monitor.py",
          "archive\\legacy_monitoring_full\\db_monitor.py",
          "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py",
          "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py",
          "AI_Engineer_Journal\\Projects\\Rap_Scraper_Project\\2multi_agent_system (!IMPORTANT_UPDATE 2.0! (реализация идеи multi_agent_system PY).py"
        ],
        "common_functions": [
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "__init__"
        ]
      },
      {
        "similarity": 0.5106382978723404,
        "files": [
          "archive\\ai_context_manager_legacy.py",
          "archive\\gemma_27b_fixed.py",
          "archive\\spotify_enhancer_sqlite_backup.py",
          "scripts\\continue_spotify_enhancement.py",
          "scripts\\rap_scraper_cli.py",
          "src\\analyzers\\multi_model_analyzer_backup.py",
          "src\\cli\\analyzer_cli.py",
          "src\\enhancers\\bulk_spotify_enhancement.py",
          "src\\enhancers\\spotify_analysis_utils.py",
          "src\\scrapers\\rap_scraper_postgres.py",
          "src\\utils\\setup_spotify.py",
          "scripts\\archive\\run_full_analysis.py",
          "scripts\\development\\demo_simplified_ml_features.py",
          "scripts\\development\\run_scraping_debug.py",
          "scripts\\development\\run_scraping_improved.py",
          "scripts\\tools\\ai_project_analyzer.py",
          "scripts\\tools\\ai_project_analyzer_fixed.py",
          "scripts\\tools\\batch_ai_analysis.py",
          "scripts\\tools\\comprehensive_ai_stats.py",
          "scripts\\tools\\database_diagnostics.py",
          "scripts\\tools\\dependency_manager.py",
          "scripts\\utils\\code_analyzer.py",
          "monitoring\\scripts\\system_monitor.py",
          "archive\\legacy_monitoring_full\\db_monitor.py"
        ],
        "common_functions": [
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main",
          "main"
        ]
      },
      {
        "similarity": 0.5,
        "files": [
          "src\\analyzers\\create_visual_analysis.py",
          "scripts\\tools\\create_cli_showcase.py",
          "archive\\legacy_monitoring_full\\db_monitor.py"
        ],
        "common_functions": [
          "get_database_stats",
          "get_database_stats",
          "get_database_stats"
        ]
      },
      {
        "similarity": 1.0,
        "files": [
          "scripts\\archive\\run_full_analysis.py",
          "scripts\\tools\\batch_ai_analysis.py"
        ],
        "common_functions": [
          "count_remaining",
          "count_remaining"
        ]
      }
    ],
    "unused_files": [],
    "architecture_violations": [
      "🗂️ New module using legacy SQLite: scripts\\continue_spotify_enhancement.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\rap_scraper_cli.py -> sqlite3",
      "🗂️ New module using legacy SQLite: tests\\conftest.py -> sqlite3",
      "🗂️ New module using legacy SQLite: tests\\test_spotify_enhancer.py -> sqlite3",
      "🗂️ New module using legacy SQLite: src\\analyzers\\create_visual_analysis.py -> sqlite3",
      "🗂️ New module using legacy SQLite: src\\enhancers\\bulk_spotify_enhancement.py -> sqlite3",
      "🗂️ New module using legacy SQLite: src\\enhancers\\spotify_analysis_utils.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\ai_project_analyzer.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\ai_project_analyzer_fixed.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\batch_ai_analysis.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\check_spotify_coverage.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\comprehensive_ai_stats.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\create_cli_showcase.py -> sqlite3",
      "🗂️ New module using legacy SQLite: scripts\\tools\\monitor_qwen_progress.py -> sqlite3",
      "🔄 PostgreSQL migration incomplete: 38.7% migrated"
    ],
    "layers": {
      "database": [],
      "analyzers": [],
      "cli": [],
      "models": [],
      "scripts": [],
      "legacy": [],
      "tests": []
    }
  }
}