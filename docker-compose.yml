# üê≥ Production Docker Compose for Rap Lyrics Analyzer API
version: '3.8'

services:
  # Main API service
  rap-analyzer-api:
    build: .
    image: rap-analyzer:latest
    container_name: rap-analyzer-api
    environment:
      - RAP_ANALYZER_ENV=production
      - PYTHONPATH=/app
      - DATABASE_PATH=/app/data/rap_lyrics.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./results:/app/results
      - ./config.yaml:/app/config.yaml:ro
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - ollama
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rap-analyzer-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: rap-analyzer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - rap-analyzer-network

  # Ollama for local AI
  ollama:
    image: ollama/ollama:latest
    container_name: rap-analyzer-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - rap-analyzer-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: rap-analyzer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rap-analyzer-api
    restart: unless-stopped
    networks:
      - rap-analyzer-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: rap-analyzer-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - rap-analyzer-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: rap-analyzer-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - rap-analyzer-network

volumes:
  redis_data:
  ollama_data:
  prometheus_data:
  grafana_data:

networks:
  rap-analyzer-network:
    driver: bridge
