# üéØ Rap Scraper Project Configuration
# –§–∞–∑–∞ 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

# Application settings
application:
  name: "Rap Scraper Project"
  version: "1.0.0"
  description: "Advanced lyrics analysis system with multiple AI and algorithmic approaches"
  author: "Vastargazing"
  
# Database configuration
database:
  # PostgreSQL configuration (replaces SQLite)
  type: "postgresql"
  host: "localhost"
  port: 5432
  name: "rap_lyrics"
  username: "rap_user"
  password: "securepassword123"
  pool_size: 20
  min_pool_size: 5
  timeout: 30
  backup_enabled: true
  backup_interval: 3600  # seconds
  
  # Legacy SQLite configuration (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  sqlite:
    path: "data/rap_lyrics.db"
    enabled: false
  
# Logging configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_path: "logs/app.log"
  max_file_size: 10485760  # 10MB
  backup_count: 5
  encoding: "utf-8"
  console_output: true

# Analyzer configurations
analyzers:
  algorithmic_basic:
    enabled: true
    config:
      sentiment_threshold: 0.5
      complexity_weights:
        vocabulary: 0.3
        structure: 0.3
        themes: 0.4
      
  qwen:
    enabled: true
    config:
      model_name: "qwen/qwen3-4b-fp8"
      base_url: "https://api.novita.ai/openai/v1"
      api_key_env: "NOVITA_API_KEY"
      temperature: 0.1
      max_tokens: 1500
      timeout: 30
      retry_attempts: 3
      
  ollama:
    enabled: true
    config:
      model: "llama3.1:8b"
      base_url: "http://localhost:11434"
      timeout: 60
      temperature: 0.3
      max_tokens: 1000
      
  hybrid:
    enabled: true
    config:
      algorithms:
        - "algorithmic_basic"
        - "qwen"
      consensus_threshold: 0.7
      fallback_analyzer: "algorithmic_basic"

  emotion_analyzer:
    enabled: true
    config:
      model_name: "j-hartmann/emotion-english-distilroberta-base"
      device: "auto"  # auto, cpu, cuda
      max_length: 512
      batch_size: 16
      cache_enabled: true
      fallback_enabled: true

# CLI settings
cli:
  batch_processing:
    default_workers: 4
    max_workers: 8
    chunk_size: 100
    progress_interval: 5.0
    checkpoint_enabled: true
    
  performance_monitoring:
    monitoring_interval: 0.1
    warmup_runs: 3
    memory_tracking: true
    cpu_tracking: true
    
  output:
    default_format: "json"
    timestamp_format: "%Y-%m-%d %H:%M:%S"
    encoding: "utf-8"

# Performance settings
performance:
  async_concurrency: 10
  request_timeout: 30
  retry_attempts: 3
  retry_delay: 1.0
  
# Security settings
security:
  api_key_validation: true
  rate_limiting:
    enabled: true
    requests_per_minute: 60
  input_validation:
    max_text_length: 100000
    forbidden_patterns: []

# Development settings
development:
  debug_mode: false
  profiling_enabled: false
  test_mode: false
  mock_external_apis: false
  
# Production settings
production:
  error_reporting: true
  metrics_collection: true
  health_check_interval: 300
  auto_scaling: false

# External services
external_services:
  google_ai:
    endpoint: "https://generativelanguage.googleapis.com"
    version: "v1beta"
    
  ollama:
    endpoint: "http://localhost:11434"
    health_check: "/api/version"
    
  genius_api:
    endpoint: "https://api.genius.com"
    version: "v1"
