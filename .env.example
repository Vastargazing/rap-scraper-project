# ÔøΩ Environment Variables - EXAMPLE
# ‚ö†Ô∏è NEVER commit .env file with real credentials!
# Copy this to .env and fill in your actual values
# Version: 2.0.0 - Updated: 2025-10-01

# ==============================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ==============================================

# PostgreSQL connection (Production)
DB_HOST=localhost                    # or 'pgvector' for Docker, or your cloud DB host
DB_NAME=rap_lyrics                   # Database name
DB_USERNAME=rap_user                 # Database username
DB_PASSWORD=your_secure_password_here  # ‚ö†Ô∏è CHANGE THIS!

# Legacy SQLite (for development)
DATABASE_PATH=data/rap_lyrics.db

# ==============================================
# ü§ñ AI/ML API KEYS
# ==============================================

# Novita AI (QWEN model - PRIMARY)
NOVITA_API_KEY=your_novita_api_key_here  # ‚ö†Ô∏è REQUIRED for QWEN

# Google AI (Gemini/Gemma models)
GOOGLE_API_KEY=your_google_api_key_here  # Optional
GOOGLE_PROJECT_ID=your_google_project_id  # Optional for Gemma

# DeepSeek API (cheap fallback - $0.003/song)
DEEPSEEK_API_KEY=your_deepseek_api_key_here  # Optional

# Genius API (lyrics scraping)
GENIUS_TOKEN=your_genius_token_here  # Required for scraping
GENIUS_API_KEY=your_genius_api_key_here  # Same as GENIUS_TOKEN

# Spotify API (metadata enrichment)
SPOTIFY_CLIENT_ID=your_spotify_client_id_here      # Optional
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here  # Optional

# ==============================================
# üîß OLLAMA CONFIGURATION
# ==============================================

# Ollama API endpoint (RECOMMENDED - free, local)
OLLAMA_BASE_URL=http://localhost:11434  # Local installation
# OLLAMA_BASE_URL=http://ollama:11434   # Docker container
OLLAMA_MODEL=llama3.1:8b                # Model to use

# ==============================================
# üíæ REDIS CONFIGURATION
# ==============================================

# Redis connection
REDIS_HOST=localhost                 # or 'redis' for Docker
REDIS_PORT=6379                      # Default Redis port
REDIS_PASSWORD=                      # Leave empty if no password
REDIS_DB=0                          # Database number (0-15)

# ==============================================
# üìä MONITORING & METRICS
# ==============================================

# Prometheus
PROMETHEUS_URL=http://localhost:9090  # Prometheus endpoint

# Grafana
GRAFANA_ADMIN_PASSWORD=admin_password_here  # ‚ö†Ô∏è CHANGE THIS!
GRAFANA_PORT=3000

# ==============================================
# üöÄ API CONFIGURATION
# ==============================================

# FastAPI settings
API_HOST=0.0.0.0                     # Listen on all interfaces
API_PORT=8000                        # API port
API_WORKERS=4                        # Number of workers
API_LOG_LEVEL=info                   # debug, info, warning, error

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Rate limiting
RATE_LIMIT_RPM=100                   # Requests per minute
RATE_LIMIT_BURST=20                  # Burst size

# ==============================================
# üîí SECURITY
# ==============================================

# JWT secret key (for authentication)
# JWT_SECRET_KEY=your_jwt_secret_here_generate_with_openssl_rand_hex_32

# API key rotation (optional)
# API_KEY_ROTATION_DAYS=90

# Session timeout (seconds)
# SESSION_TIMEOUT=3600

# ==============================================
# üåç ENVIRONMENT
# ==============================================

# Application environment
ENVIRONMENT=production               # development, staging, production
APP_VERSION=2.0.0

# Debug mode (ONLY for development!)
DEBUG=false                          # true/false

# ==============================================
# ‚öôÔ∏è ANALYSIS SETTINGS
# ==============================================

# Batch analysis settings
BATCH_ANALYSIS_LIMIT=100            # Songs per batch
ANALYSIS_DELAY=2                    # Delay between requests (seconds)
MEMORY_LIMIT_MB=2048                # Memory limit for scraper

# Auto backup
AUTO_BACKUP=true                    # Create backups when merging

# ==============================================
# üìÅ FILE PATHS
# ==============================================

# Data directories
DATA_DIR=./data
LOGS_DIR=./logs
CACHE_DIR=./cache
RESULTS_DIR=./results

# Logging
LOG_LEVEL=INFO                      # DEBUG, INFO, WARNING, ERROR
LOG_FILE=logs/scraping.log

# Backup settings
BACKUP_ENABLED=true
BACKUP_INTERVAL=3600                # seconds

# ==============================================
# üéØ ADVANCED SETTINGS (OPTIONAL)
# ==============================================

# Vector search
# VECTOR_DIMENSION=1536
# VECTOR_DISTANCE_METRIC=cosine

# Batch processing
# BATCH_SIZE=100
# MAX_WORKERS=8

# Timeouts
# REQUEST_TIMEOUT=30
# DB_TIMEOUT=30
# REDIS_TIMEOUT=5

# ==============================================
# üê≥ DOCKER CONFIGURATION
# ==============================================

# Docker compose profiles
# COMPOSE_PROFILES=dev,monitoring

# Docker network
# DOCKER_NETWORK=rap-analyzer-network

# ==============================================
# üìù NOTES & SECURITY BEST PRACTICES
# ==============================================
#
# üîê SETUP INSTRUCTIONS:
# 1. Copy this file to .env in the same directory
# 2. Fill in your actual credentials and API keys
# 3. NEVER commit .env to git (it's in .gitignore)
# 4. Use strong passwords (minimum 16 characters)
# 5. Rotate API keys regularly (every 90 days recommended)
#
# üè¢ PRODUCTION DEPLOYMENT:
# - Use environment-specific secrets management:
#   ‚Ä¢ GitHub Secrets for CI/CD
#   ‚Ä¢ Kubernetes Secrets for K8s deployments
#   ‚Ä¢ AWS Secrets Manager / Azure Key Vault for cloud
# - Different credentials for dev/staging/prod
# - Enable 2FA on all external services
# - Monitor API key usage for anomalies
# - Implement key rotation policies
# - Use read-only credentials where possible
#
# ü§ñ AI PROVIDERS GUIDE:
# - QWEN (Novita AI): Primary model, best quality
# - Ollama: Free local alternative, requires setup
# - DeepSeek: Cheap API fallback ($0.003/song)
# - Google Gemini/Gemma: Legacy option, quota limits
#
# ==============================================
