# 🧬 PostgreSQL + pgvector Setup for Rap Scraper
# Enhanced with vector extensions for ML analysis

version: '3.8'

services:
  # 🐘 PostgreSQL Database with pgvector extension
  postgresql-vector:
    image: ankane/pgvector:latest
    container_name: rap-analyzer-postgres-vector
    environment:
      POSTGRES_DB: rap_lyrics
      POSTGRES_USER: rap_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_vector_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
      - postgres_backups:/backups
    ports:
      - "5433:5432"  # Using different port to avoid conflicts
    networks:
      - rap-analyzer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rap_user -d rap_lyrics"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200


volumes:
  postgres_vector_data:
    driver: local
    name: rap_analyzer_postgres_vector_data
  postgres_backups:
    driver: local
    name: rap_analyzer_postgres_backups
  pgadmin_vector_data:
    driver: local
    name: rap_analyzer_pgadmin_vector_data

networks:
  rap-analyzer-network:
    driver: bridge
    name: rap-analyzer-network

# 🎯 Usage:
# 1. docker-compose -f docker-compose.pgvector.yml up -d
# 2. Connect to: localhost:5433
# 3. pgAdmin: http://localhost:5051
# 4. Test: SELECT vector('1,2,3');
